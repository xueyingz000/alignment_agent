# IFC Semantic Agent Configuration

# Application Settings
app:
  name: "IFC Semantic Agent"
  version: "1.0.0"
  description: "ReAct-based agent for IFC-regulatory semantic understanding and alignment"
  debug: true

# Logging Configuration
logging:
  level: "INFO"
  format: "{time:YYYY-MM-DD HH:mm:ss} | {level} | {name}:{function}:{line} | {message}"
  console:
    enabled: true
    colorize: true
  file:
    enabled: true
    path: "logs/agent.log"
    rotation: "10 MB"
    retention: "7 days"
    compression: "gz"

# ReAct Agent Configuration
react_agent:
  max_iterations: 10
  reflection_threshold: 0.3
  confidence_threshold: 0.7
  timeout_seconds: 300
  enable_memory: true
  memory_size: 1000

# LLM Configuration
llm:
  provider: "openai"  # openai, anthropic, local
  model: "gpt-4"
  api_key: "${OPENAI_API_KEY}"  # Environment variable
  base_url: null
  temperature: 0.1
  max_tokens: 2000
  timeout: 30
  retry_attempts: 3
  fallback_enabled: true

# Embedding Configuration
embeddings:
  provider: "sentence_transformers"  # sentence_transformers, openai, local
  model: "all-MiniLM-L6-v2"
  dimension: 384
  batch_size: 32
  cache_enabled: true
  cache_dir: "cache/embeddings"

# Knowledge Graph Configuration
knowledge_graph:
  backend: "networkx"  # neo4j, networkx
  neo4j:
    uri: "bolt://localhost:7687"
    username: "neo4j"
    password: "${NEO4J_PASSWORD}"
    database: "ifc_semantic"
  networkx:
    persist: true
    save_path: "data/knowledge_graph.pkl"
  ontology_path: "data/ontology_mappings.json"

# Vector Database Configuration
vector_db:
  provider: "chromadb"  # chromadb, faiss, mock
  chromadb:
    persist_directory: "data/chromadb"
    collection_name: "ifc_semantic_kb"
  faiss:
    index_path: "data/faiss_index.bin"
    metadata_path: "data/faiss_metadata.json"

# IFC Processing Configuration
ifc_processing:
  supported_formats: ["ifc", "ifcxml", "ifcjson"]
  extract_geometry: true
  extract_materials: true
  extract_properties: true
  extract_relationships: true
  max_file_size_mb: 100
  cache_enabled: true
  cache_dir: "cache/ifc"

# Text Processing Configuration
text_processing:
  supported_formats: ["txt", "md", "pdf", "docx", "json"]
  chunk_size: 512
  chunk_overlap: 50
  json_regulatory:
    extract_fields: ["title", "description", "content", "text", "requirement", "regulation"]
    regulation_keys: ["regulation_id", "code", "section", "requirement"]
    mandatory_default: true
  min_chunk_length: 100
  max_chunks: 1000
  language: "en"
  spacy_model: "en_core_web_sm"
  enable_preprocessing: true
  remove_stopwords: false

# Semantic Alignment Configuration
semantic_alignment:
  similarity_threshold: 0.3
  confidence_threshold: 0.5
  max_candidates: 10
  use_context: true
  context_window: 3
  alignment_strategies:
    - "lexical"
    - "semantic"
    - "contextual"
    - "structural"
  weights:
    lexical: 0.2
    semantic: 0.4
    contextual: 0.3
    structural: 0.1

# Entity Resolution Configuration
entity_resolution:
  disambiguation_threshold: 0.6
  max_candidates: 5
  use_hierarchy: true
  context_weight: 0.4
  similarity_weight: 0.6

# RAG System Configuration
rag_system:
  retrieval_strategies:
    - "semantic_similarity"
    - "graph_traversal"
    - "contextual_path"
    - "hybrid"
  default_strategy: "hybrid"
  top_k: 5
  max_context_length: 2000
  generate_response: true
  include_reasoning: true
  confidence_threshold: 0.4

# Data Paths
data_paths:
  ifc_samples: "data/ifc_samples/"
  regulatory_texts: "data/regulatory_texts/"
  ontology_mappings: "data/ontology_mappings.json"
  entity_patterns: "data/entity_patterns.json"
  disambiguation_rules: "data/disambiguation_rules.json"
  test_data: "data/test/"

# Cache Configuration
cache:
  enabled: true
  ttl_seconds: 3600
  max_size_mb: 500
  cleanup_interval: 300
  directories:
    embeddings: "cache/embeddings/"
    ifc: "cache/ifc/"
    text: "cache/text/"
    alignments: "cache/alignments/"

# Performance Configuration
performance:
  max_workers: 4
  batch_processing: true
  batch_size: 10
  memory_limit_mb: 2048
  enable_profiling: false
  profiling_output: "logs/profiling.log"

# Security Configuration
security:
  api_key_validation: true
  rate_limiting: false
  max_requests_per_minute: 60
  allowed_file_types: [".ifc", ".txt", ".md", ".pdf", ".docx"]
  max_upload_size_mb: 50

# Development Configuration
development:
  mock_llm: false
  mock_embeddings: false
  mock_vector_db: false
  enable_debug_logs: true
  save_intermediate_results: true
  intermediate_results_path: "debug/intermediate/"

# Monitoring Configuration
monitoring:
  enabled: false
  metrics_endpoint: "http://localhost:8080/metrics"
  health_check_interval: 30
  log_performance_metrics: true
  alert_thresholds:
    response_time_ms: 5000
    error_rate_percent: 5
    memory_usage_percent: 80

# Export Configuration
export:
  formats: ["json", "csv", "rdf", "xml"]
  default_format: "json"
  include_metadata: true
  include_confidence_scores: true
  output_directory: "output/"
  timestamp_files: true