[metadata]
name = ifc-semantic-agent
version = 1.0.0
author = IFC Semantic Agent Team
author_email = contact@ifc-semantic-agent.com
description = Intelligent IFC-Regulatory Semantic Alignment System using ReAct Framework
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/ifc-semantic-agent/ifc-semantic-agent
project_urls =
    Bug Tracker = https://github.com/ifc-semantic-agent/ifc-semantic-agent/issues
    Documentation = https://ifc-semantic-agent.readthedocs.io/
    Source Code = https://github.com/ifc-semantic-agent/ifc-semantic-agent
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Text Processing :: Linguistic

[options]
packages = find:
python_requires = >=3.8
include_package_data = True
zip_safe = False
install_requires = file: requirements.txt

[options.packages.find]
exclude =
    tests*
    docs*
    examples*

[options.extras_require]
dev =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-asyncio>=0.21.0
    black>=23.0.0
    flake8>=6.0.0
    mypy>=1.0.0
    pre-commit>=3.0.0
    sphinx>=6.0.0
    sphinx-rtd-theme>=1.2.0
    jupyter>=1.0.0
    notebook>=6.5.0
docs =
    sphinx>=6.0.0
    sphinx-rtd-theme>=1.2.0
    myst-parser>=1.0.0
    sphinx-autodoc-typehints>=1.20.0
test =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-asyncio>=0.21.0
    pytest-mock>=3.10.0
    coverage>=7.0.0
all =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-asyncio>=0.21.0
    black>=23.0.0
    flake8>=6.0.0
    mypy>=1.0.0
    pre-commit>=3.0.0
    sphinx>=6.0.0
    sphinx-rtd-theme>=1.2.0
    jupyter>=1.0.0
    notebook>=6.5.0
    myst-parser>=1.0.0
    sphinx-autodoc-typehints>=1.20.0
    pytest-mock>=3.10.0
    coverage>=7.0.0

[options.entry_points]
console_scripts =
    ifc-agent = run_agent:main
    ifc-semantic-agent = run_agent:main

[options.package_data]
config = *.yaml, *.yml, *.json
data = *.json, *.yaml, *.txt
models = *.pkl, *.joblib, *.bin

# Flake8 configuration
[flake8]
max-line-length = 100
max-complexity = 10
select = E,W,F
ignore =
    E203,  # whitespace before ':'
    E501,  # line too long (handled by black)
    W503,  # line break before binary operator
    W504,  # line break after binary operator
    F401,  # imported but unused (handled by autoflake)
exclude =
    .git,
    __pycache__,
    .venv,
    venv,
    .eggs,
    *.egg,
    build,
    dist,
    .tox,
    .mypy_cache,
    .pytest_cache,
    docs,
    migrations
per-file-ignores =
    __init__.py:F401
    tests/*:F401,F811
    examples/*:F401,F811

# Bandit security linter configuration
[bandit]
exclude_dirs = tests,docs,examples
skips = B101,B601

# Tool configuration for setuptools_scm
[tool:pytest]
addopts = -v --tb=short --strict-markers
testpaths = tests
markers =
    slow: marks tests as slow
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    performance: marks tests as performance tests

# Wheel configuration
[bdist_wheel]
universal = 0