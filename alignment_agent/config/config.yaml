# IFC Semantic Agent Configuration

# LLM Configuration
llm:
  model_name: "gpt-3.5-turbo"
  temperature: 0.1
  max_tokens: 2048
  api_key: "${OPENAI_API_KEY}"
  base_url: "https://api.openai.com/v1"

# Embedding Model Configuration
embedding:
  model_name: "sentence-transformers/all-MiniLM-L6-v2"
  dimension: 384
  device: "cpu"

# Knowledge Graph Configuration
knowledge_graph:
  neo4j:
    uri: "bolt://localhost:7687"
    username: "neo4j"
    password: "password"
  graph_db_type: "networkx"  # Options: networkx, neo4j

# Vector Database Configuration
vector_db:
  type: "chroma"  # Options: chroma, faiss
  persist_directory: "./data/vector_db"
  collection_name: "ifc_semantic"

# IFC Processing Configuration
ifc:
  supported_versions: ["IFC2X3", "IFC4", "IFC4X3"]
  entity_types:
    - "IfcWall"
    - "IfcSlab"
    - "IfcColumn"
    - "IfcBeam"
    - "IfcDoor"
    - "IfcWindow"
    - "IfcSpace"
    - "IfcOpeningElement"
    - "IfcBuildingStorey"
    - "IfcBuilding"

# Text Processing Configuration
text_processing:
  chunk_size: 512
  chunk_overlap: 50
  supported_formats: ["pdf", "txt", "md", "docx"]
  languages: ["en", "zh"]

# Semantic Alignment Configuration
semantic_alignment:
  similarity_threshold: 0.7
  alignment_methods:
    - "embedding_similarity"
    - "knowledge_graph_reasoning"
    - "rule_based_matching"

# ReAct Agent Configuration
react_agent:
  max_iterations: 10
  reflection_enabled: true
  tools:
    - "ifc_query"
    - "text_search"
    - "knowledge_graph_query"
    - "semantic_alignment"

# Logging Configuration
logging:
  level: "INFO"
  format: "{time:YYYY-MM-DD HH:mm:ss} | {level} | {name}:{function}:{line} - {message}"
  file: "./logs/agent.log"
  rotation: "1 day"
  retention: "30 days"

# Data Paths
data_paths:
  ifc_models: "./data/ifc_models/"
  regulatory_texts: "./data/regulatory_texts/"
  knowledge_graphs: "./data/knowledge_graphs/"
  outputs: "./data/outputs/"